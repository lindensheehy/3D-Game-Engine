new stuff:

- physics
    - collision checks
        - bounding box for objects (probably not 1-to-1 with the mesh for easier computing)
    - collision handling
        - seperate functions for each set of two objects

- add multiple color meshes
    - let each tri be a different color
    - let tris be drawn as a png

- add functionailty to pick an object by looking at it and tranform that specific object
    - ray cast to find an object
        - probably just check each object rather than actually stepping along a ray since theres few objects in the scene

- expand UI functionality.
    - create new objects
    - change more traits for each object


- allow xml files to include elements defined in other xml files. 
    - this should be pretty simple since everything is there to handle these
    - i just need to find a way to tokenize the constuctor signatures of each xml file in assets/elements (what parameter types they take).

- add a feature to bind elements to actions or data based on an id
    - should be a simple recursive call that will find the element with the requested id
    - different functions for each element type
        - Button
        - TextInput
        - Dragable

- refactor UI class. There are some things that the UI class does that will not work well with XML
    - WindowElement objects will need a copy() instance function
        - make a 'genericCopy()' that does all the regular stuff, then a 'virtual copy()' that will have element specific handling
    - deleting windows when binding to new data. This will be an easy fix once binding is in place

fixes:
- fix depth interpolation, depth between two points is not always linear.
- fix TextInput UI elements from drawing to infinite length.
    - probably just add a parameter 'maxLength' to Drawer::drawString()

optimizations:
- make drawTri (and other draw functions) skip out of range values entirely rather than letting writePixel do that work
- add a draw queue which will have threads to work only on drawing, while the main thread can do the math and feed the stuff that needs to be drawn to the queue
