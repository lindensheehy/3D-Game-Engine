new stuff:

- physics
    - collision checks
        - bounding box for objects (probably not 1-to-1 with the mesh for easier computing)
    - collision handling
        - seperate functions for each set of two objects

- add multiple color meshes
    - let each tri be a different color
    - let tris be drawn as a png

- add functionailty to pick an object by looking at it and tranform that specific object
    - ray cast to find an object
        - probably just check each object rather than actually stepping along a ray since theres few objects in the scene

- custom XML like system for defining windows in the UI
    - custom defined elements in XML
    - full windows also defined in XML, which can use custom elements within

- expand UI functionality.
    - create new objects
    - change more traits for each object

- improve XML class
    - Make some sort of wrapper to hold valid element names, along with thier parameters
        - linked list to hold the string names of each element
        - second linked list ParameterInfo objects
        - ideally, use would be very simplified, something like matchElement
            - could return the element parameter information wrapper if the string was matched, or nullptr if not
    - createElement will just
        - for elements
            - match the string using the above mentioned wrapper
            - if it doesnt exist, log an error "unrecognised element name"
        - for traits
            - match the trait name (first string) against the parameter names in the element
                - if it doesnt exist, throw an error
            - take the trait value (second string) and try to cast it to the type specified in the element
                - if the cast fails, throw an error (ex. (int) "string")
        - after these two steps i can actually make this sub element
        - if the stack is not empty (it never should be), add this element as a child to the top of the stack
        - for children
            - when a children section starts, push the last created element to the stack
            - when a children section ends, i pop an element from the stack

        

fixes:
- fix depth interpolation, depth between two points is not always linear.
- fix TextInput UI elements from drawing to infinite length.
    - probably just add a parameter 'maxLength' to Drawer::drawString()

optimizations:
- make drawTri (and other draw functions) skip out of range values entirely rather than letting writePixel do that work
- add a draw queue which will have threads to work only on drawing, while the main thread can do the math and feed the stuff that needs to be drawn to the queue
